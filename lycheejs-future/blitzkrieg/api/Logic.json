{
	"header": {
		"identifier": "game.Logic",
		"attaches": {},
		"tags": {},
		"requires": [
			"lychee.app.State",
			"lychee.effect.Alpha",
			"lychee.effect.Color",
			"lychee.effect.Lightning",
			"lychee.effect.Position",
			"lychee.effect.Shake",
			"game.entity.Tank",
			"game.logic.Level",
			"game.logic.Path"
		],
		"includes": [
			"lychee.event.Emitter"
		],
		"supports": {},
		"type": "Composite"
	},
	"memory": {
		"_Emitter": {
			"chunk": "lychee.import('lychee.event.Emitter')",
			"type": "lychee.Definition",
			"value": {
				"reference": "lychee.event.Emitter",
				"arguments": []
			}
		},
		"_Tank": {
			"chunk": "lychee.import('game.entity.Tank')",
			"type": "lychee.Definition",
			"value": {
				"reference": "game.entity.Tank",
				"arguments": []
			}
		},
		"_Level": {
			"chunk": "lychee.import('game.logic.Level')",
			"type": "lychee.Definition",
			"value": {
				"reference": "game.logic.Level",
				"arguments": []
			}
		},
		"_State": {
			"chunk": "lychee.import('lychee.app.State')",
			"type": "lychee.Definition",
			"value": {
				"reference": "lychee.app.State",
				"arguments": []
			}
		}
	},
	"errors": [
		{
			"url": "/home/cookiengineer/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/Logic.js",
			"rule": "no-parameter-value",
			"reference": "set",
			"message": "Invalid parameter values for \"position\", \"entity\", \"layerid\" for method \"set()\".",
			"line": 656,
			"column": 17
		},
		{
			"url": "/home/cookiengineer/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/Logic.js",
			"rule": "no-parameter-value",
			"reference": "get",
			"message": "Invalid parameter values for \"position\", \"layerid\" for method \"get()\".",
			"line": 689,
			"column": 17
		},
		{
			"url": "/home/cookiengineer/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/Logic.js",
			"rule": "no-parameter-value",
			"reference": "getSurrounding",
			"message": "Invalid parameter values for \"position\", \"layerid\" for method \"getSurrounding()\".",
			"line": 716,
			"column": 28
		},
		{
			"url": "/home/cookiengineer/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/Logic.js",
			"rule": "no-parameter-value",
			"reference": "toScreenPosition",
			"message": "Invalid parameter values for \"position\" for method \"toScreenPosition()\".",
			"line": 765,
			"column": 30
		},
		{
			"url": "/home/cookiengineer/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/Logic.js",
			"rule": "no-parameter-value",
			"reference": "toTilePosition",
			"message": "Invalid parameter values for \"position\" for method \"toTilePosition()\".",
			"line": 835,
			"column": 28
		},
		{
			"url": "/home/cookiengineer/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/Logic.js",
			"rule": "no-parameter-value",
			"reference": "strikeEarthquake",
			"message": "Invalid parameter values for \"entity\" for method \"strikeEarthquake()\".",
			"line": 903,
			"column": 30
		},
		{
			"url": "/home/cookiengineer/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/Logic.js",
			"rule": "no-parameter-value",
			"reference": "strikeLightning",
			"message": "Invalid parameter values for \"entity\" for method \"strikeLightning()\".",
			"line": 965,
			"column": 29
		}
	],
	"result": {
		"constructor": {
			"body": "function(main) {\n\n\t\tthis.main    = main         || null;\n\t\tthis.jukebox = main.jukebox || null;\n\t\tthis.loop    = main.loop    || null;\n\t\tthis.TILE    = null;\n\t\tthis.state   = null;\n\n\t\tthis.__actions = [];\n\t\tthis.__blitzes = [];\n\t\tthis.__locked  = false;\n\t\tthis.__ui      = {\n\t\t\tcursor:  null,\n\t\t\toverlay: null,\n\t\t\tpath:    null\n\t\t};\n\t\tthis.__focus   = {\n\t\t\tobject:   null,\n\t\t\tposition: { x: null, y: null }\n\t\t};\n\t\tthis.__map     = {};\n\t\tthis.__mode    = {\n\t\t\taction: null,\n\t\t\tobject: null\n\t\t};\n\n\n\t\t_Emitter.call(this);\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tthis.bind('resort', function() {\n\t\t\t_depth_sort.call(this);\n\t\t}, this);\n\n\t\tthis.bind('select', function(object, terrain, tileposition) {\n\n\t\t\tlet cursor = this.__ui.cursor;\n\t\t\tif (cursor !== null) {\n\n\t\t\t\tlet screenposition = this.toScreenPosition({\n\t\t\t\t\tx: tileposition.x,\n\t\t\t\t\ty: tileposition.y\n\t\t\t\t}, 'sky');\n\n\n\t\t\t\tif (screenposition.x !== cursor.position.x || screenposition.y !== cursor.position.y) {\n\t\t\t\t\tthis.jukebox.play(_sounds.select_position);\n\t\t\t\t}\n\n\n\t\t\t\tif (object !== null) {\n\n\t\t\t\t\tif (object instanceof _Tank) {\n\n\t\t\t\t\t\tthis.jukebox.play(_sounds.select_tank);\n\n\t\t\t\t\t\tif (object.action === 'idle') {\n\t\t\t\t\t\t\tthis.jukebox.play(_sounds.voice_idle);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcursor.setState('active');\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcursor.setState('default');\n\n\t\t\t\t}\n\n\t\t\t\tcursor.setVisible(true);\n\t\t\t\tcursor.setLabel(tileposition.x + 'x' + tileposition.y);\n\n\t\t\t\tcursor.addEffect(new lychee.effect.Position({\n\t\t\t\t\ttype:     lychee.effect.Position.TYPE.easeout,\n\t\t\t\t\tposition: screenposition\n\t\t\t\t}));\n\n\t\t\t\tcursor.addEffect(new lychee.effect.Lightning({\n\t\t\t\t\ttype:     lychee.effect.Lightning.TYPE.bounceeaseout,\n\t\t\t\t\tduration: 500,\n\t\t\t\t\tposition: screenposition\n\t\t\t\t}));\n\n\t\t\t}\n\n\n\t\t\tthis.__focus.object     = object;\n\t\t\tthis.__focus.position.x = tileposition.x;\n\t\t\tthis.__focus.position.y = tileposition.y;\n\n\n\t\t\tlet path = this.__ui.path;\n\t\t\tif (path !== null) {\n\n\t\t\t\tlet mode = this.__mode;\n\t\t\t\tif (mode.action === 'attack') {\n\n\t\t\t\t\tpath.setPosition(tileposition);\n\t\t\t\t\tpath.setVisible(true);\n\n\t\t\t\t} else if (mode.action === 'move') {\n\n\t\t\t\t\tpath.setPosition(tileposition);\n\t\t\t\t\tpath.setVisible(true);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tlet overlay = this.__ui.overlay;\n\t\t\tlet action  = this.__mode.action;\n\t\t\tif (overlay !== null) {\n\n\t\t\t\tif (action === null) {\n\n\t\t\t\t\tobject = this.__mode.object || object;\n\n\t\t\t\t\tif (object === null) {\n\n\t\t\t\t\t\toverlay.setObject(null);\n\n\t\t\t\t\t\toverlay.hideAction('attack');\n\t\t\t\t\t\toverlay.hideAction('move');\n\n\t\t\t\t\t\tif (terrain !== null && terrain.isFree()) {\n\t\t\t\t\t\t\toverlay.showAction('drop');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toverlay.hideAction('drop');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\toverlay.setObject(object);\n\n\t\t\t\t\t\tif (object.canAction('attack')) {\n\t\t\t\t\t\t\toverlay.showAction('attack');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toverlay.hideAction('attack');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (object.canAction('move')) {\n\t\t\t\t\t\t\toverlay.showAction('move');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toverlay.hideAction('move');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this);\n\n\t\tthis.bind('deselect', function() {\n\n\t\t\tthis.__focus.object     = null;\n\t\t\tthis.__focus.position.x = null;\n\t\t\tthis.__focus.position.y = null;\n\t\t\tthis.__mode.action      = null;\n\t\t\tthis.__mode.object      = null;\n\n\n\t\t\tlet cursor = this.__ui.cursor;\n\t\t\tif (cursor !== null) {\n\t\t\t\tcursor.setVisible(false);\n\t\t\t}\n\n\t\t\tlet path = this.__ui.path;\n\t\t\tif (path !== null) {\n\t\t\t\tpath.setVisible(false);\n\t\t\t}\n\n\t\t\tlet overlay = this.__ui.overlay;\n\t\t\tif (overlay !== null) {\n\t\t\t\toverlay.hideAction('attack');\n\t\t\t\toverlay.hideAction('move');\n\t\t\t}\n\n\t\t}, this);\n\n\n\t\tthis.bind('blitz', function() {\n\n\t\t\tif (this.__locked === false) {\n\n\t\t\t\tlet delay = 0;\n\n\t\t\t\tlet blitzes = this.__blitzes;\n\t\t\t\tfor (let b = 0, bl = blitzes.length; b < bl; b++) {\n\n\t\t\t\t\tlet blitz = blitzes[b];\n\t\t\t\t\tif (blitz.canAction('blitz') === true) {\n\t\t\t\t\t\tdelay = Math.max(delay, blitz.duration);\n\t\t\t\t\t\tblitz.setAction('blitz');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tthis.__locked = true;\n\n\t\t\t\tthis.loop.setTimeout(delay, function() {\n\t\t\t\t\tthis.trigger('resort', []);\n\t\t\t\t\tthis.__locked = false;\n\t\t\t\t}, this);\n\n\t\t\t}\n\n\t\t}, this);\n\n\t\tthis.bind('attack', function() {\n\n\t\t\tlet focus   = this.__focus;\n\t\t\tlet mode    = this.__mode;\n\t\t\tlet overlay = this.__ui.overlay;\n\n\t\t\tif (mode.action !== 'attack') {\n\n\t\t\t\tif (focus.object !== null && focus.object.canAction('attack')) {\n\n\t\t\t\t\tmode.object = focus.object;\n\t\t\t\t\tmode.action = 'attack';\n\n\t\t\t\t\tif (overlay !== null) {\n\t\t\t\t\t\toverlay.hideAction('move');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if (mode.action === 'attack') {\n\n\t\t\t\tif (focus.object !== null) {\n\n\t\t\t\t\tif (focus.object.color !== mode.object.color) {\n\n\t\t\t\t\t\tthis.jukebox.play(_sounds.voice_attack);\n\n\t\t\t\t\t\tthis.__actions.push({\n\t\t\t\t\t\t\ttime:   null,\n\t\t\t\t\t\t\ttype:   'attack',\n\t\t\t\t\t\t\tobject: mode.object,\n\t\t\t\t\t\t\ttarget: focus.object\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.trigger('deselect', []);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this);\n\n\t\tthis.bind('move', function() {\n\n\t\t\tlet focus   = this.__focus;\n\t\t\tlet mode    = this.__mode;\n\t\t\tlet overlay = this.__ui.overlay;\n\t\t\tlet path    = this.__ui.path;\n\n\t\t\tif (mode.action !== 'move') {\n\n\t\t\t\tif (focus.object !== null && focus.object.canAction('move')) {\n\n\t\t\t\t\tmode.object = focus.object;\n\t\t\t\t\tmode.action = 'move';\n\n\t\t\t\t\tif (path !== null) {\n\t\t\t\t\t\tpath.setOrigin(this.toTilePosition(focus.object.position, 'objects'));\n\t\t\t\t\t\tpath.setPosition(focus.position);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (overlay !== null) {\n\t\t\t\t\t\toverlay.hideAction('attack');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if (mode.action === 'move') {\n\n\t\t\t\tif (focus.position !== null) {\n\n\t\t\t\t\tlet terrain = this.get(focus.position, 'terrain');\n\t\t\t\t\tif (terrain !== null && terrain.isFree()) {\n\n\t\t\t\t\t\tthis.jukebox.play(_sounds.voice_move);\n\n\t\t\t\t\t\tthis.__actions.push({\n\t\t\t\t\t\t\ttime:   null,\n\t\t\t\t\t\t\ttype:   'move',\n\t\t\t\t\t\t\tobject: mode.object,\n\t\t\t\t\t\t\tpath:   path.buffer,\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tx: focus.position.x,\n\t\t\t\t\t\t\t\ty: focus.position.y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.trigger('deselect', []);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this);\n\n\t\tthis.bind('drop', function() {\n\n\t\t\tif (this.__locked === false) {\n\n\t\t\t\tlet focus = this.__focus;\n\n\t\t\t\tif (focus.object === null && focus.position.x !== null && focus.position.y !== null) {\n\n\t\t\t\t\tlet position = focus.position;\n\t\t\t\t\tlet terrain  = this.get(position, 'terrain');\n\t\t\t\t\tlet object   = this.get(position, 'objects');\n\n\t\t\t\t\tif (terrain !== null && object === null) {\n\n\t\t\t\t\t\tif (terrain.isFree()) {\n\n\t\t\t\t\t\t\tobject = new _Tank({\n\t\t\t\t\t\t\t\talpha:    0.1,\n\t\t\t\t\t\t\t\tcolor:    'red',\n\t\t\t\t\t\t\t\tposition: this.toScreenPosition(position, 'objects')\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tobject.addEffect(new lychee.effect.Alpha({\n\t\t\t\t\t\t\t\ttype:     lychee.effect.Alpha.TYPE.easeout,\n\t\t\t\t\t\t\t\tdelay:    500,\n\t\t\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\t\t\talpha:    1\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\tobject.addEffect(new lychee.effect.Shake({\n\t\t\t\t\t\t\t\ttype:     lychee.effect.Shake.TYPE.linear,\n\t\t\t\t\t\t\t\tdelay:    200,\n\t\t\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\t\t\tshake:    { y: 30 }\n\t\t\t\t\t\t\t}));\n\n\n\t\t\t\t\t\t\tthis.strikeLightning(object);\n\t\t\t\t\t\t\tthis.strikeEarthquake(this.get(position, 'terrain'));\n\n\n\t\t\t\t\t\t\tthis.set(position, object, 'objects');\n\t\t\t\t\t\t\tthis.state.queryLayer('game', 'objects').addEntity(object);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this);\n\n\t}",
			"hash": "5efed9ea",
			"parameters": [
				{
					"chunk": null,
					"name": "main",
					"type": "undefined"
				}
			]
		},
		"settings": {},
		"properties": {
			"main": {
				"chunk": "this.main    = main         || null;",
				"value": {
					"chunk": "main         || null",
					"type": "lychee.app.Main",
					"value": {
						"constructor": "lychee.app.Main",
						"arguments": []
					}
				}
			},
			"jukebox": {
				"chunk": "this.jukebox = main.jukebox || null;",
				"value": {
					"chunk": "main.jukebox || null",
					"type": "Object",
					"value": {}
				}
			},
			"loop": {
				"chunk": "this.loop    = main.loop    || null;",
				"value": {
					"chunk": "main.loop    || null",
					"type": "Object",
					"value": {}
				}
			},
			"TILE": {
				"chunk": "this.TILE    = null;",
				"value": {
					"chunk": "null",
					"type": "null",
					"value": null
				}
			},
			"state": {
				"chunk": "this.state   = null;",
				"value": {
					"chunk": "null",
					"type": "null",
					"value": null
				}
			},
			"__actions": {
				"chunk": "this.__actions = [];",
				"value": {
					"chunk": "[]",
					"type": "Array",
					"value": []
				}
			},
			"__blitzes": {
				"chunk": "this.__blitzes = [];",
				"value": {
					"chunk": "[]",
					"type": "Array",
					"value": []
				}
			},
			"__locked": {
				"chunk": "this.__locked  = false;",
				"value": {
					"chunk": "false",
					"type": "Boolean",
					"value": false
				}
			},
			"__ui": {
				"chunk": "this.__ui      = {\n\t\t\tcursor:  null,\n\t\t\toverlay: null,\n\t\t\tpath:    null\n\t\t};",
				"value": {
					"chunk": "{\n\t\t\tcursor:  null,\n\t\t\toverlay: null,\n\t\t\tpath:    null\n\t\t}",
					"type": "Object",
					"value": {
						"cursor": null,
						"overlay": null,
						"path": null
					}
				}
			},
			"__focus": {
				"chunk": "this.__focus   = {\n\t\t\tobject:   null,\n\t\t\tposition: { x: null, y: null }\n\t\t};",
				"value": {
					"chunk": "{\n\t\t\tobject:   null,\n\t\t\tposition: { x: null, y: null }\n\t\t}",
					"type": "Object",
					"value": {
						"object": null,
						"position": {
							"x": null,
							"y": null
						}
					}
				}
			},
			"__map": {
				"chunk": "this.__map     = {};",
				"value": {
					"chunk": "{}",
					"type": "Object",
					"value": {}
				}
			},
			"__mode": {
				"chunk": "this.__mode    = {\n\t\t\taction: null,\n\t\t\tobject: null\n\t\t};",
				"value": {
					"chunk": "{\n\t\t\taction: null,\n\t\t\tobject: null\n\t\t}",
					"type": "Object",
					"value": {
						"action": null,
						"object": null
					}
				}
			}
		},
		"enums": {},
		"events": {
			"resort": {
				"name": "resort",
				"methods": [],
				"parameters": [
					{
						"chunk": "",
						"type": "undefined"
					}
				]
			},
			"deselect": {
				"name": "deselect",
				"methods": [],
				"parameters": [
					{
						"chunk": "",
						"type": "undefined"
					}
				]
			}
		},
		"methods": {
			"deserialize": {
				"body": "function(blob) {}",
				"chunk": "function(blob) {",
				"hash": "cf6d9c5f",
				"parameters": [
					{
						"name": "blob",
						"type": "SerializationBlob",
						"value": {}
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"body": "function() {\n\n\t\t\tlet data = _Emitter.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'game.Logic';\n\n\n\t\t\treturn data;\n\n\t\t}",
				"chunk": "\t\tserialize: function() {",
				"hash": "08b5fe41",
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			},
			"update": {
				"body": "function(clock, delta) {\n\n\t\t\tlet actions = this.__actions;\n\t\t\tfor (let a = 0, al = actions.length; a < al; a++) {\n\n\t\t\t\tlet action = actions[a];\n\t\t\t\tif (action.time === null) {\n\n\t\t\t\t\taction.time = clock;\n\n\t\t\t\t} else if (clock > action.time) {\n\n\t\t\t\t\tlet type   = action.type;\n\t\t\t\t\tlet object = action.object;\n\t\t\t\t\tlet target = action.target;\n\n\t\t\t\t\tif (type === 'attack') {\n\n\t\t\t\t\t\t// TODO: Implement attack, needs explosion sprite & ui non-event layer\n\n\t\t\t\t\t} else if (type === 'move') {\n\n\t\t\t\t\t\tif (object.effects.length === 0) {\n\n\t\t\t\t\t\t\ttarget = action.path.splice(0, 1)[0] || null;\n\n\t\t\t\t\t\t\tif (target !== null) {\n\n\t\t\t\t\t\t\t\tlet other = this.get(target, 'objects');\n\t\t\t\t\t\t\t\tif (other === null) {\n\n\t\t\t\t\t\t\t\t\tlet tileposition = this.toTilePosition(object.position, 'objects');\n\t\t\t\t\t\t\t\t\tlet screentarget = this.toScreenPosition(target,        'objects');\n\n\t\t\t\t\t\t\t\t\tthis.set(tileposition, null,   'objects');\n\t\t\t\t\t\t\t\t\tthis.set(target,       object, 'objects');\n\n\t\t\t\t\t\t\t\t\tobject.setTarget(screentarget);\n\t\t\t\t\t\t\t\t\tobject.addEffect(new lychee.effect.Position({\n\t\t\t\t\t\t\t\t\t\ttype: lychee.effect.Position.TYPE.linear,\n\t\t\t\t\t\t\t\t\t\tdelay:    250,\n\t\t\t\t\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\t\t\t\t\tx: screentarget.x,\n\t\t\t\t\t\t\t\t\t\t\ty: screentarget.y\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\t\t\taction.time = clock + 750;\n\n\t\t\t\t\t\t\t\t} else if (other !== object) {\n\n\t\t\t\t\t\t\t\t\tactions.splice(a, 1);\n\t\t\t\t\t\t\t\t\tal--;\n\t\t\t\t\t\t\t\t\ta--;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}",
				"chunk": "\t\tupdate: function(clock, delta) {",
				"hash": "2b0145e7",
				"parameters": [
					{
						"chunk": null,
						"name": "clock",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "delta",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"enter": {
				"body": "function(state, level) {\n\n\t\t\tstate = lychee.interfaceof(_State, state) ? state : null;\n\t\t\tlevel = level instanceof _Level ? level : null;\n\n\n\t\t\tif (state !== null && level !== null) {\n\n\t\t\t\tthis.state = state;\n\t\t\t\tthis.TILE  = state.main.TILE;\n\n\t\t\t\tthis.jukebox.play(_music.commando);\n\n\t\t\t\t_enter.call(this, level);\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"chunk": "\t\tenter: function(state, level) {",
				"hash": "86361fe1",
				"parameters": [
					{
						"chunk": "lychee.interfaceof(_State, state) ? state : null",
						"name": "state",
						"type": "_State",
						"value": null
					},
					{
						"chunk": "level instanceof _Level ? level : null",
						"name": "level",
						"type": "_Level",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"leave": {
				"body": "function() {\n\n\t\t\tthis.jukebox.stop(null);\n\n\t\t\treturn true;\n\n\t\t}",
				"chunk": "\t\tleave: function() {",
				"hash": "aec64af0",
				"parameters": [],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"set": {
				"body": "function(position, entity, layerid) {\n\n\t\t\tlet layer = this.state.queryLayer('game', layerid);\n\t\t\tif (layer !== null) {\n\n\t\t\t\tlet map = this.__map[layerid] || null;\n\t\t\t\tif (map === null) {\n\t\t\t\t\tmap = this.__map[layerid] = {};\n\t\t\t\t}\n\n\n\t\t\t\tlet x = position.x || null;\n\t\t\t\tlet y = position.y || null;\n\t\t\t\tif (x !== null && y !== null) {\n\n\t\t\t\t\tif (map[x] === undefined) {\n\t\t\t\t\t\tmap[x] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tmap[x][y] = entity;\n\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"chunk": "\t\tset: function(position, entity, layerid) {",
				"hash": "ffa75ed3",
				"parameters": [
					{
						"chunk": null,
						"name": "position",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "entity",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "layerid",
						"type": "undefined"
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"get": {
				"body": "function(position, layerid) {\n\n\t\t\tlet map = this.__map[layerid] || null;\n\t\t\tif (map !== null) {\n\n\t\t\t\tlet x = position.x || null;\n\t\t\t\tlet y = position.y || null;\n\n\t\t\t\tif (x !== null && y !== null) {\n\n\t\t\t\t\tif (map[x] !== undefined) {\n\n\t\t\t\t\t\tif (map[x][y] !== undefined) {\n\t\t\t\t\t\t\treturn map[x][y];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn null;\n\n\t\t}",
				"chunk": "\t\tget: function(position, layerid) {",
				"hash": "0337ffa8",
				"parameters": [
					{
						"chunk": null,
						"name": "position",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "layerid",
						"type": "undefined"
					}
				],
				"values": [
					{
						"chunk": "null",
						"type": "null",
						"value": null
					}
				]
			},
			"getSurrounding": {
				"body": "function(position, layerid) {\n\n\t\t\tlet filtered = [];\n\t\t\tlet entity   = null;\n\n\t\t\tlet layer = this.state.queryLayer('game', layerid);\n\t\t\tif (layer !== null) {\n\n\t\t\t\tlet coords = [];\n\t\t\t\tlet x0     = position.x;\n\t\t\t\tlet y0     = position.y;\n\t\t\t\tlet x1     = position.x - 1;\n\t\t\t\tlet y1     = position.y - 1;\n\t\t\t\tlet x2     = position.x + 1;\n\t\t\t\tlet y2     = position.y + 1;\n\n\n\t\t\t\tif (y0 % 2 === 1) {\n\n\t\t\t\t\tcoords.push({ x: x2, y: y1 });\n\t\t\t\t\tcoords.push({ x: x2, y: y0 });\n\t\t\t\t\tcoords.push({ x: x2, y: y2 });\n\t\t\t\t\tcoords.push({ x: x0, y: y2 });\n\t\t\t\t\tcoords.push({ x: x1, y: y0 });\n\t\t\t\t\tcoords.push({ x: x0, y: y1 });\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcoords.push({ x: x0, y: y1 });\n\t\t\t\t\tcoords.push({ x: x2, y: y0 });\n\t\t\t\t\tcoords.push({ x: x0, y: y2 });\n\t\t\t\t\tcoords.push({ x: x1, y: y2 });\n\t\t\t\t\tcoords.push({ x: x1, y: y0 });\n\t\t\t\t\tcoords.push({ x: x1, y: y1 });\n\n\t\t\t\t}\n\n\n\t\t\t\tfor (let c = 0, cl = coords.length; c < cl; c++) {\n\t\t\t\t\tfiltered.push(this.get(coords[c], layerid));\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn filtered;\n\n\t\t}",
				"chunk": "\t\tgetSurrounding: function(position, layerid) {",
				"hash": "4151aba6",
				"parameters": [
					{
						"chunk": null,
						"name": "position",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "layerid",
						"type": "undefined"
					}
				],
				"values": [
					{
						"chunk": "[]",
						"type": "Array",
						"value": []
					}
				]
			},
			"toScreenPosition": {
				"body": "function(position, layerid) {\n\n\t\t\tlayerid = typeof layerid === 'string' ? layerid : 'terrain';\n\n\n\t\t\tlet tile = this.TILE;\n\t\t\tif (tile !== null) {\n\n\t\t\t\tlet layer = this.state.queryLayer('game', 'terrain');\n\t\t\t\tif (layer !== null) {\n\n\t\t\t\t\tlet bb = 0;\n\t\t\t\t\tlet z  = 0;\n\n\t\t\t\t\tif (layerid === 'terrain') {\n\t\t\t\t\t\tz  = 0;\n\t\t\t\t\t} else if (layerid === 'objects') {\n\t\t\t\t\t\tbb = 64;\n\t\t\t\t\t\tz  = 1;\n\t\t\t\t\t} else if (layerid === 'sky') {\n\t\t\t\t\t\tbb = 64;\n\t\t\t\t\t\tz  = 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz  = position.z;\n\t\t\t\t\t}\n\n\n\t\t\t\t\tlet screenposition = {\n\t\t\t\t\t\tx: position.x,\n\t\t\t\t\t\ty: position.y\n\t\t\t\t\t};\n\n\t\t\t\t\tif (screenposition.y % 2 === 1) {\n\t\t\t\t\t\tscreenposition.x += 0.5;\n\t\t\t\t\t}\n\n\t\t\t\t\tscreenposition.x *= tile.width;\n\t\t\t\t\tscreenposition.y *= tile.offset;\n\n\t\t\t\t\tscreenposition.x += -1 / 2 * layer.width;\n\t\t\t\t\tscreenposition.x += tile.width / 2;\n\n\t\t\t\t\tscreenposition.y += -1 / 2 * layer.height;\n\t\t\t\t\tscreenposition.y += (tile.offset / 2) + (tile.height - tile.offset) / 2;\n\n\n\t\t\t\t\tif (z !== 0) {\n\t\t\t\t\t\tscreenposition.y -= z * (tile.height - tile.offset);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bb !== 0) {\n\t\t\t\t\t\tscreenposition.y += ((tile.height - tile.offset) - (bb - tile.offset));\n\t\t\t\t\t}\n\n\n\t\t\t\t\tscreenposition.x |= 0;\n\t\t\t\t\tscreenposition.y |= 0;\n\n\n\t\t\t\t\treturn screenposition;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn null;\n\n\t\t}",
				"chunk": "\t\ttoScreenPosition: function(position, layerid) {",
				"hash": "40c77c24",
				"parameters": [
					{
						"chunk": null,
						"name": "position",
						"type": "undefined"
					},
					{
						"chunk": "typeof layerid === 'string' ? layerid : 'terrain'",
						"name": "layerid",
						"type": "String",
						"value": "terrain"
					}
				],
				"values": [
					{
						"chunk": "{x: position.x,\n\t\t\t\t\t\ty: position.y\n\t\t\t\t\t}",
						"type": "Object",
						"value": {}
					},
					{
						"chunk": "null",
						"type": "null",
						"value": null
					}
				]
			},
			"toTilePosition": {
				"body": "function(position, layerid) {\n\n\t\t\tlayerid = typeof layerid === 'string' ? layerid : 'terrain';\n\n\n\t\t\tlet tile  = this.TILE;\n\t\t\tif (tile !== null) {\n\n\t\t\t\tlet layer = this.state.queryLayer('game', 'terrain');\n\t\t\t\tif (layer !== null) {\n\n\t\t\t\t\tlet bb = 0;\n\t\t\t\t\tlet z  = 0;\n\n\t\t\t\t\tif (layerid === 'terrain') {\n\t\t\t\t\t\tz  = 0;\n\t\t\t\t\t} else if (layerid === 'objects') {\n\t\t\t\t\t\tbb = 64;\n\t\t\t\t\t\tz  = 1;\n\t\t\t\t\t} else if (layerid === 'sky') {\n\t\t\t\t\t\tbb = 64;\n\t\t\t\t\t\tz  = 2;\n\t\t\t\t\t}\n\n\n\t\t\t\t\tlet tileposition = {\n\t\t\t\t\t\tx: position.x,\n\t\t\t\t\t\ty: position.y,\n\t\t\t\t\t\tz: z\n\t\t\t\t\t};\n\n\n\t\t\t\t\tif (z !== 0) {\n\t\t\t\t\t\ttileposition.y += z * (tile.height - tile.offset);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bb !== 0) {\n\t\t\t\t\t\ttileposition.y -= ((tile.height - tile.offset) - (bb - tile.offset));\n\t\t\t\t\t}\n\n\n\t\t\t\t\ttileposition.x -= -1 / 2 * layer.width;\n\t\t\t\t\ttileposition.y -= -1 / 2 * layer.height;\n\n\t\t\t\t\ttileposition.x /= tile.width;\n\t\t\t\t\ttileposition.y /= tile.offset;\n\n\n\t\t\t\t\ttileposition.y |= 0;\n\n\t\t\t\t\tif (tileposition.y % 2 === 1) {\n\t\t\t\t\t\ttileposition.x -= 0.5;\n\t\t\t\t\t}\n\n\t\t\t\t\ttileposition.x |= 0;\n\n\n\t\t\t\t\treturn tileposition;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn null;\n\n\t\t}",
				"chunk": "\t\ttoTilePosition: function(position, layerid) {",
				"hash": "e096927b",
				"parameters": [
					{
						"chunk": null,
						"name": "position",
						"type": "undefined"
					},
					{
						"chunk": "typeof layerid === 'string' ? layerid : 'terrain'",
						"name": "layerid",
						"type": "String",
						"value": "terrain"
					}
				],
				"values": [
					{
						"chunk": "{x: position.x,\n\t\t\t\t\t\ty: position.y,\n\t\t\t\t\t\tz: z\n\t\t\t\t\t}",
						"type": "Object",
						"value": {}
					},
					{
						"chunk": "null",
						"type": "null",
						"value": null
					}
				]
			},
			"strikeEarthquake": {
				"body": "function(entity) {\n\n\t\t\tif (entity === null) return false;\n\n\n\t\t\tif (this.__locked === false) {\n\n\t\t\t\tlet position = this.toTilePosition(entity.position, 'terrain');\n\n\t\t\t\tentity.addEffect(new lychee.effect.Shake({\n\t\t\t\t\ttype:     lychee.effect.Shake.TYPE.linear,\n\t\t\t\t\tdelay:    500,\n\t\t\t\t\tduration: 500,\n\t\t\t\t\tshake:    { y: 20 }\n\t\t\t\t}));\n\n\n\t\t\t\tlet sterrain = this.getSurrounding(position, 'terrain');\n\t\t\t\tfor (let st = 0, stl = sterrain.length; st < stl; st++) {\n\n\t\t\t\t\tif (sterrain[st] !== null) {\n\n\t\t\t\t\t\tsterrain[st].addEffect(new lychee.effect.Shake({\n\t\t\t\t\t\t\ttype:     lychee.effect.Shake.TYPE.linear,\n\t\t\t\t\t\t\tdelay:    750,\n\t\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\t\tshake:    { y: 10 }\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlet sobjects = this.getSurrounding(position, 'objects');\n\t\t\t\tfor (let so = 0, sol = sobjects.length; so < sol; so++) {\n\n\t\t\t\t\tif (sobjects[so] !== null) {\n\n\t\t\t\t\t\tsobjects[so].addEffect(new lychee.effect.Shake({\n\t\t\t\t\t\t\ttype:     lychee.effect.Shake.TYPE.linear,\n\t\t\t\t\t\t\tdelay:    750,\n\t\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\t\tshake:    { y: 10 }\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tthis.__locked = true;\n\t\t\t\tthis.loop.setTimeout(1250, function() {\n\t\t\t\t\tthis.__locked = false;\n\t\t\t\t}, this);\n\n\t\t\t}\n\n\n\t\t\treturn true;\n\n\t\t}",
				"chunk": "\t\tstrikeEarthquake: function(entity) {",
				"hash": "5617cb17",
				"parameters": [
					{
						"chunk": null,
						"name": "entity",
						"type": "undefined"
					}
				],
				"values": [
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					},
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"strikeLightning": {
				"body": "function(entity) {\n\n\t\t\tif (entity === null) return false;\n\n\n\t\t\tthis.jukebox.play(_sounds.lightning);\n\n\n\t\t\tlet ui = this.state.getLayer('ui');\n\t\t\tif (ui !== null && ui.effects.length === 0) {\n\n\t\t\t\tlet background = ui.getEntity('background');\n\t\t\t\tif (background !== null && background.effects.length === 0) {\n\n\t\t\t\t\tbackground.alpha = 0;\n\t\t\t\t\tbackground.color = '#000000';\n\n\t\t\t\t\tbackground.addEffect(new lychee.effect.Color({\n\t\t\t\t\t\ttype:     lychee.effect.Color.TYPE.bounceeaseout,\n\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\tcolor:    '#ffffff'\n\t\t\t\t\t}));\n\n\t\t\t\t\tbackground.addEffect(new lychee.effect.Alpha({\n\t\t\t\t\t\ttype:     lychee.effect.Alpha.TYPE.bounceeaseout,\n\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\talpha:    0.5\n\t\t\t\t\t}));\n\n\t\t\t\t\tbackground.addEffect(new lychee.effect.Alpha({\n\t\t\t\t\t\ttype:     lychee.effect.Alpha.TYPE.bounceeaseout,\n\t\t\t\t\t\tdelay:    250,\n\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\talpha:    0\n\t\t\t\t\t}));\n\n\t\t\t\t}\n\n\t\t\t\tui.addEffect(new lychee.effect.Shake({\n\t\t\t\t\ttype:     lychee.effect.Shake.TYPE.bounceeaseout,\n\t\t\t\t\tduration: 1000,\n\t\t\t\t\tshake:    { y: -20 + Math.random() * -30 }\n\t\t\t\t}));\n\n\t\t\t}\n\n\n\t\t\tlet position = this.toTilePosition(entity.position, 'objects');\n\n\t\t\tentity.addEffect(new lychee.effect.Lightning({\n\t\t\t\ttype:     lychee.effect.Lightning.TYPE.bounceeaseout,\n\t\t\t\tduration: 1000,\n\t\t\t\tposition: this.toScreenPosition({\n\t\t\t\t\tx: position.x,\n\t\t\t\t\ty: position.y,\n\t\t\t\t\tz: 30\n\t\t\t\t}, 'custom')\n\t\t\t}));\n\n\n\t\t\treturn true;\n\n\t\t}",
				"chunk": "\t\tstrikeLightning: function(entity) {",
				"hash": "03cb586d",
				"parameters": [
					{
						"chunk": null,
						"name": "entity",
						"type": "undefined"
					}
				],
				"values": [
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					},
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					}
				]
			}
		}
	}
}