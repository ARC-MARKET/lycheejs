{
	"header": {
		"identifier": "game.ui.Overlay",
		"attaches": {},
		"tags": {},
		"requires": [],
		"includes": [
			"lychee.ui.Layer"
		],
		"supports": {},
		"type": "Composite"
	},
	"memory": {},
	"errors": [
		{
			"url": "/opt/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/ui/Overlay.js",
			"rule": "no-return-value",
			"reference": "reshape",
			"message": "Invalid return value for method \"reshape()\".",
			"line": 161,
			"column": 1
		},
		{
			"url": "/opt/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/ui/Overlay.js",
			"rule": "no-parameter-value",
			"reference": "showAction",
			"message": "Invalid parameter values for \"action\" for method \"showAction()\".",
			"line": 422,
			"column": 24
		},
		{
			"url": "/opt/Software/Artificial-Engineering/lycheejs-future/blitzkrieg/source/ui/Overlay.js",
			"rule": "no-parameter-value",
			"reference": "hideAction",
			"message": "Invalid parameter values for \"action\" for method \"hideAction()\".",
			"line": 442,
			"column": 24
		}
	],
	"result": {
		"constructor": {
			"body": "function(data) {\n\n\t\tlet settings = lychee.extend({}, data);\n\n\n\t\tthis.__background = {\n\t\t\tmap: _get_map('background')[0]\n\t\t};\n\n\t\tthis.__blitz = {\n\t\t\tstart:    null,\n\t\t\tduration: 30000,\n\t\t\tmap:      lychee.extend({}, _get_map('bar-blitz')[0])\n\t\t};\n\n\t\tthis.__drop = {\n\t\t\tstart:    null,\n\t\t\tduration: 1000,\n\t\t\tready:    false,\n\t\t\tmap:      lychee.extend({}, _get_map('bar-drop')[0])\n\t\t};\n\n\t\tthis.__health = {\n\t\t\tmap:      lychee.extend({}, _get_map('bar-health')[0])\n\t\t};\n\n\t\tthis.__object    = null;\n\t\tthis.__scanlines = {\n\t\t\tstart:    null,\n\t\t\tduration: 1500,\n\t\t\tframe:    0,\n\t\t\tmap:      _get_map('scanlines')\n\t\t};\n\n\n\t\tlychee.ui.Layer.call(this, settings);\n\n\n\t\tsettings = null;\n\n\t}",
			"hash": "d5a5d258",
			"parameters": [
				{
					"chunk": null,
					"name": "data",
					"type": "Object"
				}
			]
		},
		"settings": {},
		"properties": {
			"__background": {
				"chunk": "this.__background = {\n\t\t\tmap: _get_map('background')[0]\n\t\t};",
				"value": {
					"chunk": "{\n\t\t\tmap: _get_map('background')[0]\n\t\t}",
					"type": "Object",
					"value": {}
				}
			},
			"__blitz": {
				"chunk": "this.__blitz = {\n\t\t\tstart:    null,\n\t\t\tduration: 30000,\n\t\t\tmap:      lychee.extend({}, _get_map('bar-blitz')[0])\n\t\t};",
				"value": {
					"chunk": "{\n\t\t\tstart:    null,\n\t\t\tduration: 30000,\n\t\t\tmap:      lychee.extend({}, _get_map('bar-blitz')[0])\n\t\t}",
					"type": "Object",
					"value": {}
				}
			},
			"__drop": {
				"chunk": "this.__drop = {\n\t\t\tstart:    null,\n\t\t\tduration: 1000,\n\t\t\tready:    false,\n\t\t\tmap:      lychee.extend({}, _get_map('bar-drop')[0])\n\t\t};",
				"value": {
					"chunk": "{\n\t\t\tstart:    null,\n\t\t\tduration: 1000,\n\t\t\tready:    false,\n\t\t\tmap:      lychee.extend({}, _get_map('bar-drop')[0])\n\t\t}",
					"type": "Object",
					"value": {}
				}
			},
			"__health": {
				"chunk": "this.__health = {\n\t\t\tmap:      lychee.extend({}, _get_map('bar-health')[0])\n\t\t};",
				"value": {
					"chunk": "{\n\t\t\tmap:      lychee.extend({}, _get_map('bar-health')[0])\n\t\t}",
					"type": "Object",
					"value": {}
				}
			},
			"__object": {
				"chunk": "this.__object    = null;",
				"value": {
					"chunk": "null",
					"type": "null",
					"value": null
				}
			},
			"__scanlines": {
				"chunk": "this.__scanlines = {\n\t\t\tstart:    null,\n\t\t\tduration: 1500,\n\t\t\tframe:    0,\n\t\t\tmap:      _get_map('scanlines')\n\t\t};",
				"value": {
					"chunk": "{\n\t\t\tstart:    null,\n\t\t\tduration: 1500,\n\t\t\tframe:    0,\n\t\t\tmap:      _get_map('scanlines')\n\t\t}",
					"type": "Object",
					"value": {}
				}
			}
		},
		"enums": {},
		"events": {
			"action": {
				"name": "action",
				"methods": [
					"deserialize",
					"update"
				],
				"parameters": [
					{
						"chunk": "'attack'",
						"type": "String",
						"value": "attack"
					}
				]
			}
		},
		"methods": {
			"deserialize": {
				"body": "function(blob) {\n\n\t\t\tlychee.ui.Layer.prototype.deserialize.call(this, blob);\n\n\n\t\t\tlet entity = null;\n\n\n\t\t\tentity = this.getEntity('attack');\n\t\t\tif (entity !== null) {\n\n\t\t\t\tentity.bind('#touch', function(entity) {\n\t\t\t\t\tif (!entity.state.match(/disabled/)) {\n\t\t\t\t\t\tthis.trigger('action', [ 'attack' ]);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t}\n\n\t\t\tentity = this.getEntity('move');\n\t\t\tif (entity !== null) {\n\n\t\t\t\tentity.bind('#touch', function(entity) {\n\t\t\t\t\tif (!entity.state.match(/disabled/)) {\n\t\t\t\t\t\tthis.trigger('action', [ 'move' ]);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t}\n\n\t\t\tentity = this.getEntity('drop');\n\t\t\tif (entity !== null) {\n\n\t\t\t\tentity.setState('drop-disabled');\n\n\t\t\t\tentity.bind('#touch', function(entity) {\n\n\t\t\t\t\tif (!entity.state.match(/disabled/)) {\n\n\t\t\t\t\t\tthis.trigger('action', [ 'drop' ]);\n\n\t\t\t\t\t\tentity.setState('drop-disabled');\n\t\t\t\t\t\tthis.__drop.start = null;\n\t\t\t\t\t\tthis.__drop.ready = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}, this);\n\n\t\t\t}\n\n\t\t\tentity = this.getEntity('deselect');\n\t\t\tif (entity !== null) {\n\n\t\t\t\tentity.bind('#touch', function(entity) {\n\t\t\t\t\tif (!entity.state.match(/disabled/)) {\n\t\t\t\t\t\tthis.trigger('action', [ 'deselect' ]);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t}\n\n\t\t}",
				"chunk": "\t\tdeserialize: function(blob) {",
				"hash": "818a8d68",
				"parameters": [
					{
						"chunk": null,
						"name": "blob",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"body": "function() {\n\n\t\t\tdata['constructor'] = 'game.ui.Overlay';\n\n\n\t\t\treturn data;\n\n\t\t}",
				"chunk": "\t\tserialize: function() {",
				"hash": "9b0f9397",
				"parameters": [],
				"values": [
					{
						"type": "SerializationBlob",
						"value": {
							"constructor": null,
							"arguments": [],
							"blob": null
						}
					}
				]
			},
			"reshape": {
				"body": "function() {\n\n\t\t\tlet entity = null;\n\t\t\tlet width  = this.width;\n\t\t\tlet height = this.height;\n\n\n\t\t\tentity = this.getEntity('attack');\n\t\t\tif (entity !== null) {\n\t\t\t\tentity.position.x = 1 / 2 * width - 128;\n\t\t\t}\n\n\t\t\tentity = this.getEntity('move');\n\t\t\tif (entity !== null) {\n\t\t\t\tentity.position.x = 1 / 2 * width - 48;\n\t\t\t}\n\n\t\t\tentity = this.getEntity('drop');\n\t\t\tif (entity !== null) {\n\t\t\t\tentity.position.x = -1 / 2 * width + 128;\n\t\t\t}\n\n\t\t\tentity = this.getEntity('deselect');\n\t\t\tif (entity !== null) {\n\t\t\t\tentity.position.x = -1 / 2 * width + 48;\n\t\t\t}\n\n\t\t}",
				"chunk": "\t\treshape: function() {",
				"hash": "fb2192d3",
				"parameters": [],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"render": {
				"body": "function(renderer, offsetX, offsetY) {\n\n\t\t\tlet texture = _texture || null;\n\t\t\tif (texture !== null) {\n\n\t\t\t\tlet alpha    = this.alpha;\n\t\t\t\tlet position = this.position;\n\n\t\t\t\tlet map = null;\n\t\t\t\tlet x0  = position.x + offsetX - _width  / 2;\n\t\t\t\tlet y0  = position.y + offsetY - _height / 2;\n\t\t\t\tlet x1  = 0;\n\t\t\t\tlet y1  = 0;\n\n\n\t\t\t\tif (alpha !== 1) {\n\t\t\t\t\trenderer.setAlpha(alpha);\n\t\t\t\t}\n\n\n\t\t\t\tmap = this.__background.map || null;\n\n\t\t\t\tif (map !== null) {\n\n\t\t\t\t\tx1 = x0;\n\t\t\t\t\ty1 = y0;\n\n\t\t\t\t\trenderer.drawSprite(\n\t\t\t\t\t\tx1,\n\t\t\t\t\t\ty1,\n\t\t\t\t\t\ttexture,\n\t\t\t\t\t\tmap\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\n\t\t\t\tmap = this.__blitz.map || null;\n\n\t\t\t\tif (map !== null) {\n\n\t\t\t\t\tx1 = x0 + 55;\n\t\t\t\t\ty1 = y0 + 52;\n\n\t\t\t\t\trenderer.drawSprite(\n\t\t\t\t\t\tx1,\n\t\t\t\t\t\ty1,\n\t\t\t\t\t\ttexture,\n\t\t\t\t\t\tmap\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\n\t\t\t\tmap = this.__drop.map || null;\n\n\t\t\t\tif (map !== null) {\n\n\t\t\t\t\tx1 = x0 + 55;\n\t\t\t\t\ty1 = y0 + 84;\n\n\t\t\t\t\trenderer.drawSprite(\n\t\t\t\t\t\tx1,\n\t\t\t\t\t\ty1,\n\t\t\t\t\t\ttexture,\n\t\t\t\t\t\tmap\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\n\t\t\t\tx1 = x0 + 296;\n\t\t\t\ty1 = y0 + 38;\n\n\t\t\t\trenderer.setAlpha(0.5);\n\t\t\t\trenderer.drawBox(\n\t\t\t\t\tx1,\n\t\t\t\t\ty1,\n\t\t\t\t\tx1 + 64,\n\t\t\t\t\ty1 + 64,\n\t\t\t\t\t'#000000',\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t\trenderer.setAlpha(alpha);\n\n\n\t\t\t\tlet object = this.__object;\n\t\t\t\tif (object !== null) {\n\n\t\t\t\t\tx1 = x0 + 296 - object.position.x + 32;\n\t\t\t\t\ty1 = y0 + 38  - object.position.y + 32;\n\n\t\t\t\t\tobject.render(\n\t\t\t\t\t\trenderer,\n\t\t\t\t\t\tx1,\n\t\t\t\t\t\ty1\n\t\t\t\t\t);\n\n\n\t\t\t\t\tmap   = this.__health.map || null;\n\n\t\t\t\t\tif (map !== null) {\n\n\t\t\t\t\t\tx1 = x0 + 295;\n\t\t\t\t\t\ty1 = y0 + 106;\n\n\n\t\t\t\t\t\tmap.w = (object.health || 100) / 100 * map.width;\n\n\t\t\t\t\t\trenderer.drawSprite(\n\t\t\t\t\t\t\tx1,\n\t\t\t\t\t\t\ty1,\n\t\t\t\t\t\t\ttexture,\n\t\t\t\t\t\t\tmap\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tmap = this.__scanlines.map[this.__scanlines.frame] || null;\n\n\t\t\t\tif (map !== null) {\n\n\t\t\t\t\tx1 = x0 + 296;\n\t\t\t\t\ty1 = y0 + 38;\n\n\t\t\t\t\trenderer.setAlpha(0.5);\n\t\t\t\t\trenderer.drawSprite(\n\t\t\t\t\t\tx1,\n\t\t\t\t\t\ty1,\n\t\t\t\t\t\ttexture,\n\t\t\t\t\t\tmap\n\t\t\t\t\t);\n\t\t\t\t\trenderer.setAlpha(alpha);\n\n\t\t\t\t}\n\n\n\t\t\t\tif (alpha !== 1) {\n\t\t\t\t\trenderer.setAlpha(1);\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tlychee.ui.Layer.prototype.render.call(this, renderer, offsetX, offsetY);\n\n\t\t}",
				"chunk": "\t\trender: function(renderer, offsetX, offsetY) {",
				"hash": "fa95fc78",
				"parameters": [
					{
						"chunk": null,
						"name": "renderer",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "offsetX",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "offsetY",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"update": {
				"body": "function(clock, delta) {\n\n\t\t\tlychee.ui.Layer.prototype.update.call(this, clock, delta);\n\n\n\t\t\tlet blitz = this.__blitz;\n\t\t\tif (blitz.start === null) {\n\t\t\t\tblitz.start = clock;\n\t\t\t}\n\n\t\t\tlet bt = (clock - blitz.start) / blitz.duration;\n\t\t\tif (bt > 1) {\n\n\t\t\t\tthis.trigger('action', [ 'blitz' ]);\n\t\t\t\tblitz.start = null;\n\n\t\t\t} else {\n\n\t\t\t\tblitz.map.w = (bt * blitz.map.width) | 0;\n\n\t\t\t}\n\n\n\t\t\tlet drop = this.__drop;\n\t\t\tif (drop.ready === false) {\n\n\t\t\t\tif (drop.start === null) {\n\t\t\t\t\tdrop.start = clock;\n\t\t\t\t}\n\n\t\t\t\tlet dt = (clock - drop.start) / drop.duration;\n\t\t\t\tif (dt > 1) {\n\n\t\t\t\t\tlet entity = this.getEntity('drop');\n\t\t\t\t\tif (entity !== null) {\n\t\t\t\t\t\tentity.setState('drop');\n\t\t\t\t\t}\n\n\t\t\t\t\tdrop.map.w = drop.map.width | 0;\n\t\t\t\t\tdrop.ready = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdrop.map.w = (dt * drop.map.width) | 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tlet scanlines = this.__scanlines;\n\t\t\tif (scanlines.start === null) {\n\t\t\t\tscanlines.start = clock;\n\t\t\t}\n\n\t\t\tlet st = (clock - scanlines.start) / scanlines.duration;\n\t\t\tif (st <= 1) {\n\t\t\t\tscanlines.frame = Math.max(0, Math.ceil(st * 16) - 1);\n\t\t\t} else {\n\t\t\t\tscanlines.start = clock;\n\t\t\t\tscanlines.frame = 0;\n\t\t\t}\n\n\t\t}",
				"chunk": "\t\tupdate: function(clock, delta) {",
				"hash": "b7b4c617",
				"parameters": [
					{
						"chunk": null,
						"name": "clock",
						"type": "undefined"
					},
					{
						"chunk": null,
						"name": "delta",
						"type": "undefined"
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"setObject": {
				"body": "function(object) {\n\n\t\t\tobject = object instanceof Object ? object : null;\n\n\t\t\tthis.__object = object;\n\n\t\t\treturn true;\n\n\t\t}",
				"chunk": "\t\tsetObject: function(object) {",
				"hash": "1cbb244c",
				"parameters": [
					{
						"chunk": "object instanceof Object ? object : null",
						"name": "object",
						"type": "Object",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"showAction": {
				"body": "function(action) {\n\n\t\t\tlet entity = this.getEntity(action);\n\t\t\tif (entity !== null) {\n\n\t\t\t\tif (action === 'drop' && this.__drop.ready === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tentity.setState(action);\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"chunk": "\t\tshowAction: function(action) {",
				"hash": "5b53c7ba",
				"parameters": [
					{
						"chunk": null,
						"name": "action",
						"type": "undefined"
					}
				],
				"values": [
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					},
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					}
				]
			},
			"hideAction": {
				"body": "function(action) {\n\n\t\t\tlet entity = this.getEntity(action);\n\t\t\tif (entity !== null) {\n\n\t\t\t\tentity.setState(action + '-disabled');\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"chunk": "\t\thideAction: function(action) {",
				"hash": "e2bf7e19",
				"parameters": [
					{
						"chunk": null,
						"name": "action",
						"type": "undefined"
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			}
		}
	}
}